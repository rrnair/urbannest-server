{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PingResponse": {
				"description": "A response object for Ping request",
				"properties": {
					"message": {
						"type": "string",
						"description": "An aribitrary ping message"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Address": {
				"description": "Address of a property",
				"properties": {
					"location": {
						"type": "string",
						"description": "Location of the property - Whitefile, Indirangar etc"
					},
					"city": {
						"type": "string",
						"description": "City where the property is located"
					},
					"state": {
						"type": "string",
						"description": "State where the property is located"
					},
					"country": {
						"type": "string",
						"description": "Country where the property is located"
					},
					"pin": {
						"type": "number",
						"format": "double",
						"description": "Pin code of the place"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PropertyCategory": {
				"description": "Type of property - Residential, Commerical etc.",
				"enum": [
					"all",
					"residential",
					"commercial"
				],
				"type": "string"
			},
			"PropertyStatus": {
				"description": "Status of the property - new/completed/upcoming.",
				"enum": [
					"all",
					"new",
					"completed",
					"upcoming"
				],
				"type": "string"
			},
			"Property": {
				"description": "A definition of a property, the property can be a new, completed or upcoming property. These details\nare listed on the site by its status classification i.e. new/complete/upcoming.",
				"properties": {
					"id": {
						"type": "string",
						"description": "An Unique Id of the property"
					},
					"name": {
						"type": "string",
						"description": "A short name of the property - `Brigade Metropolis`"
					},
					"address": {
						"$ref": "#/components/schemas/Address",
						"description": "A short address of the property"
					},
					"title": {
						"type": "string",
						"description": "Display title - `A Windflower`"
					},
					"category": {
						"$ref": "#/components/schemas/PropertyCategory",
						"description": "Category of property - Residential, Commerical etc"
					},
					"shortDescription": {
						"type": "string",
						"description": "A short description may be of 255 chars *"
					},
					"listedOn": {
						"type": "string",
						"format": "date-time",
						"description": "When its listed first in the site"
					},
					"status": {
						"$ref": "#/components/schemas/PropertyStatus",
						"description": "Whats the status of the property - new/completed/upcoming"
					},
					"completedOn": {
						"type": "string",
						"format": "date-time",
						"description": "If completed then when it was compeleted"
					},
					"tags": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Any tags - Premium, Road Side etc"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Any static images that can be displayed in the listing"
					},
					"contentPath": {
						"type": "string",
						"description": "Detaled content - usually a PDF file location"
					},
					"builder": {
						"type": "string",
						"description": "Builder name"
					}
				},
				"required": [
					"id",
					"name",
					"title",
					"category",
					"shortDescription",
					"listedOn",
					"status",
					"builder"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "urbannest-server",
		"version": "1.0.0",
		"description": "A REST API server for Web UI",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/ping": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/props/{category}/{status}": {
			"get": {
				"operationId": "GetByFilter",
				"responses": {
					"200": {
						"description": "One or more properties matching specified property category, incase no status is specified then all properties \nare returned",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Property"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all properties, filter by Property category and completion status.",
				"security": [],
				"parameters": [
					{
						"description": "Property category - all or residential or commercial",
						"in": "path",
						"name": "category",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/PropertyCategory"
						}
					},
					{
						"description": "Property completion status - all or new or completed or upcoming",
						"in": "path",
						"name": "status",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/PropertyStatus"
						}
					}
				]
			}
		},
		"/props/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "One or more properties",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Property"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all available property details - across all property categories",
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}